using System.Diagnostics;
using System.Text.Unicode;

namespace Homework1;

class Program
{
    enum Seasons {Лето, Осень, Зима, Весна, Ошибка}   //перечислимый тип с временами года
    
    static void Main(string[] args)
    {
        //task-1
        Console.WriteLine($"Число с обнуленным разрядом десятков: {DeleteNumbers(123)}");
        /*
        Ввод: 945; Вывод: Число с обнуленным разрядом десятков: 905 
        Ввод: 777; Вывод: Число с обнуленным разрядом десятков: 707 
        Ввод: 123; Вывод: Число с обнуленным разрядом десятков: 103
        */
        Console.WriteLine();
        
        //task-2
        Console.WriteLine(ColorChess(4,8));
        /*
        Ввод: 1,1; Вывод: Указанное поле черного цвета
        Ввод: 2,3; Вывод: Указанное поле белого цвета
        Ввод: 4,8; Вывод: Указанное поле черного цвета
        */
        Console.WriteLine();
        
        //task-3
        Console.WriteLine(cntSqrt(1,2,1));
        /*
        Ввод: 1,2,3; Вывод: У квадратного уравнения нет действительных корней; Дискриминант = -8
        Ввод: 1,2,-3; Вывод: У квадратного уравнения два различных корня; Дискриминант = 16
        Ввод: 1,2,1; Вывод: У квадратного уравнения один корень (два равных); Дискриминант = 0
        */
        Console.WriteLine();
        
        //task-4
        Console.WriteLine($"Минимальное из двух заданных чисел: {Minimum(-99,0)}");
        /*
        Ввод: 123, 101; Вывод: Минимальное из двух заданных чисел: 101
        Ввод: 0, 11; Вывод: Минимальное из двух заданных чисел: 0
        Ввод: -99, 0; Вывод: Минимальное из двух заданных чисел: -99
        */
        Console.WriteLine();
        
        //task-5
        Console.WriteLine($"Произведение четных чисел в заданном диапазоне: {productEven(5,6)}");
        /*
        Ввод: 1, 10; Вывод: Произведение четных чисел в заданном диапазоне: 3840
        Ввод: -1, 11; Вывод: Произведение четных чисел в заданном диапазоне: 0
        Ввод: 5, 6; Вывод: Произведение четных чисел в заданном диапазоне: 6
        */
        Console.WriteLine();
        
        //task-6
        var (less, total) = cntNum(5);
        Console.WriteLine($"Количество чисел меньших k: {less}");
        Console.WriteLine($"Количество делящихся нацело на k: {total}");
        /*
        Последовательно вводите числа (чтобы остановить, введите ноль): 
           3
           5
           10
           25
           -1
           0
           Количество чисел меньших k: 3
           Количество делящихся нацело на k: 3
        */
        Console.WriteLine();
        
        //task-7
        Console.WriteLine($"Время года в заданный номер месяца: {SeasonalYear(5)}");
        /*
        Ввод: 0; Вывод: Время года в заданный номер месяца: Ошибка
        Ввод: 1; Вывод: Время года в заданный номер месяца: Зима
        Ввод: 7; Вывод: Время года в заданный номер месяца: Лето
        Ввод: 9; Вывод: Время года в заданный номер месяца: Осень
        Ввод: 5; Вывод: Время года в заданный номер месяца: Весна
        */
        Console.WriteLine();
        
        //task-8
        SpamMonth(0);
        /*
        Ввод: 5; Вывод: 
            Месяц №7, его сезон: Лето
            Месяц №2, его сезон: Зима
            Месяц №8, его сезон: Лето
            Месяц №9, его сезон: Осень
            Месяц №5, его сезон: Весна
           
        Ввод: 2; Вывод: 
            Месяц №3, его сезон: Весна
            Месяц №10, его сезон: Осень
         */
    }

    static int DeleteNumbers(int a) //task-1 (Дано трехзначное число. Обнулить в нем разряд десятков.)
    {
        Debug.Assert((a >= 100) && (a <= 999)); //проверка на количество разрядов числа a
        
        int b = a % 10;
        a = a / 100 * 100;
        a = a + b;

        return a;
    }

    static string ColorChess(int x, int y) //Определить цвет указанного поля на шахматной доске 
    {
        Debug.Assert((x >= 1) && (x <= 8)); //проверка на корректность количества полей
        Debug.Assert((y >= 1) && (y <= 8));
        
        if ((x + y) % 2 == 0)  //доска чередует цвета, поэтому можно отталкиваться от четности суммы координат поля
            return "Указанное поле черного цвета";
        else
            return "Указанное поле белого цвета";
    }
    
    static string cntSqrt(int a, int b, int c) //Вернуть количество вещественных корней квадратного уравнения 𝐴𝑥2+𝐵𝑥+𝑐=0
    {
        Debug.Assert(a != 0);

        int discr = b * b - 4 * a * c; //вычисление дискриминанта
        
        if (discr > 0) 
            return $"У квадратного уравнения два различных корня; Дискриминант = {discr}";
        else if (discr == 0)
            return $"У квадратного уравнения один корень (два равных); Дискриминант = {discr}";
        else 
            return $"У квадратного уравнения нет действительных корней; Дискриминант = {discr}";
    }

    static double Minimum(double a, double b) //Функция, которая возвращает минимум из двух переданных вещественных чисел
    {
        return Math.Min(a, b);
    }
    
    static double productEven(int a, int b) //Найти произведение всех чётных целых чисел от A до B включительно 
    {
        double product = 1;
        for (int i = a; i <= b; i++) //идем циклом по всем числам от a до b включительно
        {
            if (i % 2 == 0) //0 четный, поэтому если он будет в диапазоне, то ответ станет равен нулю
                product *= i;
        }
        return product;
    }

    static (int, int) cntNum(int k) //Вычислить количество чисел, меньших K и делящихся на K нацело.
    {
        int cntLessK = 0; //количество чисел меньших k
        int cntTotally = 0; //количество чисел делящихся на k нацело
        int num = 0; //наш набор будет заполняться в эту переменную
        
        Console.WriteLine("Последовательно вводите числа (чтобы остановить, введите ноль): ");
        while (true) //бесконечный цикл, который можно будет принудительно остановить вводом нуля
        {
            num = int.Parse(Console.ReadLine()); //запускаем ввод чисел
            
            if (num == 0) //выход
                break;

            if (num < k)
                cntLessK++;
            if (num % k == 0)
                cntTotally++;
        }
        return (cntLessK, cntTotally);
    }
    
    static Seasons SeasonalYear(int month) //Определение времени года по номеру месяца
    {
        switch (month)
        {
            case 6:
            case 7:
            case 8:
                return Seasons.Лето;
            case 9:
            case 10:
            case 11:
                return Seasons.Осень;
            case 12:
            case 1:
            case 2:
                return Seasons.Зима;
            case 3:
            case 4:
            case 5:
                return Seasons.Весна;
            default:
                return Seasons.Ошибка;
        }

    }

    static void SpamMonth(int n) //Вывод на консоль N строк.
    {
        Random r = new Random();
        int month = 0;
        
        for (int i = 1; i <= n; i++) //идем циклом по всем числам (месяцам) от 1 до n
        {
            month = r.Next(1, 12); 
            Console.WriteLine($"Месяц №{month}, его сезон: {SeasonalYear(month)}");
        }
    }
}